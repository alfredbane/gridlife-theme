/*!
Theme Name: Autumn Ecommerce
Theme URI: https://memorres.com
Author: Memorres digital pvt. ltd.
Author URI: https://memorres.com/
Description: Ecommerce theme built for the sites using gutenberg. Fast site load and beautiful designs.Featuring ample whitespace and modern sans-serif headlines paired with classic serif body text, it's built to be beautiful on all screen sizes.
Requires at least: WordPress 4.9.6
Version: 1.0
License: GNU General Public License v2 or later
License URI: LICENSE
Text Domain: twentynineteen
Tags: one-column, flexible-header, accessibility-ready, custom-colors, custom-menu, custom-logo, editor-style.
*/
/* transform-mixin */
/* transition mixin */
/*animation keyrames */
.slide:before, .slide:after {
  content: "";
  width: 100%;
  height: 100%;
  background: rgba(76, 176, 189, 0.3);
  z-index: -1;
  position: fixed;
  top: 0px;
  transition: transform cubic-bezier(0.77, 0, 0.175, 1) 0.8s;
  transform: translate(0%, -100%); }

.slide:after {
  background: #ffffff;
  transition-delay: 0s; }

.slide:before {
  transition-delay: 0.1s; }

.slide--right:before, .slide--right:after {
  right: 0;
  transform: translate(100%, 0%); }

.slide--left:before, .slide--left:after {
  left: 0;
  transform: translate(-100%, 0%); }

.nav-active .slide:before, .nav-active .slide:after {
  transform: translate(0%, 0%); }

.nav-active .slide:after {
  transition-delay: 0.1s; }

.nav-active .slide:before {
  transition-delay: 0s; }

.fadeinup {
  opacity: 0;
  transition-delay: 0.8s;
  transform: translate(0%, 100%);
  transition: opacity 0.2s ease, transform 0.3s ease; }

.nav-active .fadeinup {
  opacity: 1;
  transform: translate(0%);
  transition: opacity 0.3s ease, transform 0.3s ease, color 0.3s ease; }
  .nav-active .fadeinup:nth-child(0) {
    transition-delay: 0.5s; }
  .nav-active .fadeinup:nth-child(1) {
    transition-delay: 0.6s; }
  .nav-active .fadeinup:nth-child(2) {
    transition-delay: 0.7s; }
  .nav-active .fadeinup:nth-child(3) {
    transition-delay: 0.8s; }
  .nav-active .fadeinup:nth-child(4) {
    transition-delay: 0.9s; }

/*

.foo {
  background-image: image('kittens.png');
}

*/
.item-flex {
  display: flex;
  -moz-flex-direction: column;
  flex-direction: column;
  -moz-align-items: center;
  -ms-align-items: center;
  align-items: center;
  -moz-justify-content: center;
  -ms-justify-content: center;
  justify-content: center;
  -ms-flex-pack: center;
  flex-wrap: wrap; }
  .item-flex--direction-row {
    -moz-flex-direction: row;
    flex-direction: row; }
  .item-flex--item-normal {
    -moz-align-items: normal;
    -ms-align-items: normal;
    align-items: normal; }
  .item-flex--alignment-flexstart {
    -moz-justify-content: flex-start;
    -ms-justify-content: flex-start;
    justify-content: flex-start;
    -ms-flex-pack: flex-start; }
  .item-flex--alignment-center {
    -moz-justify-content: center;
    -ms-justify-content: center;
    justify-content: center;
    -ms-flex-pack: center; }
  .item-flex--alignment-flexend {
    -moz-justify-content: flex-end;
    -ms-justify-content: flex-end;
    justify-content: flex-end;
    -ms-flex-pack: flex-end; }
  .item-flex--flexgrow-1 {
    -moz-flex-grow: 1;
    -ms-flex-grow: 1;
    flex-grow: 1; }
  .item-flex .outline-block {
    border: 1px solid #272727;
    background: #ffffff; }

.has-border--left::before {
  content: "";
  width: 1px;
  height: 12px;
  background-color: #272727;
  position: absolute;
  top: 33%;
  left: 0; }

.has-border--right::after {
  content: "";
  width: 1px;
  height: 12px;
  background-color: #272727;
  position: absolute;
  top: 33%;
  right: 0; }

.img--filter-grayscale {
  -webkit-filter: grayscale(100%);
  -moz-filter: grayscale(100%);
  -ms-filter: grayscale(100%);
  -o-filter: grayscale(100%);
  filter: grayscale(100%); }

.img--imgfull {
  width: 100%; }

.img--imgauto {
  width: auto; }

.margin--top-bottom-10 {
  margin: 10px 0; }

.margin--top-bottom-20 {
  margin: 20px 0; }

.color--text-white a, .color--text-white p, .color--text-white span, .color--text-white label, .color--text-white input[type=text], .color--text-white input[type=url], .color--text-white input[type=email], .color--text-white input[type=password], .color--text-white input[type=number] {
  color: #ffffff; }

.color--background-white a, .color--background-white p, .color--background-white span, .color--background-white label, .color--background-white input[type=text], .color--background-white input[type=url], .color--background-white input[type=email], .color--background-white input[type=password], .color--background-white input[type=number] {
  background-color: #ffffff; }

.color--text-black a, .color--text-black p, .color--text-black span, .color--text-black label, .color--text-black input[type=text], .color--text-black input[type=url], .color--text-black input[type=email], .color--text-black input[type=password], .color--text-black input[type=number] {
  color: #272727; }

.color--background-black a, .color--background-black p, .color--background-black span, .color--background-black label, .color--background-black input[type=text], .color--background-black input[type=url], .color--background-black input[type=email], .color--background-black input[type=password], .color--background-black input[type=number] {
  background-color: #272727; }

.text-align--left {
  text-align: left; }

.text-align--right {
  text-align: right; }

.text-align--center {
  text-align: center; }

/**
 * Set the global `box-sizing` state to `border-box`.
 *
 * css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice
 * paulirish.com/2012/box-sizing-border-box-ftw
 */
html {
  box-sizing: border-box; }

*, *:after, *:before {
  box-sizing: inherit; }

/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0; }

/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block; }

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */ }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button; }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none; }

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none; }

a, abbr, acronym, address, applet, article, aside,
audio, b, big, blockquote, body, canvas, caption,
center, cite, code, dd, del, details, dfn, div, dl, dt,
em, embed, fieldset, figcaption, figure, footer,
form, h1, h2, h3, h4, h5, h6, header, hgroup, html, i,
iframe, img, ins, kbd, label, legend, li, mark, menu,
nav, object, ol, output, p, pre, q, ruby, s, samp, section,
small, span, strike, strong, sub, summary, sup,
table, tbody, td, tfoot, th, thead, time, tr, tt, u, ul, var, video {
  margin: 0;
  padding: 0;
  border: 0;
  vertical-align: baseline; }

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block; }

a {
  outline: none; }

p {
  margin-top: 0;
  margin-bottom: var(--space-xxxs);
  line-height: 30px; }

em {
  color: #272727; }

iframe {
  width: 100%; }

blockquote,
q {
  quotes: none; }

blockquote:after, blockquote:before {
  content: '';
  content: none; }

q:after, q:before {
  content: '';
  content: none; }

/**
 * Shared declarations for certain elements.
 */
/**
 * Always declare margins in the same direction:
 * csswizardry.com/2012/06/single-direction-margin-declarations
 */
address,
blockquote, p, pre,
dl, ol, ul,
figure,
hr,
table,
fieldset {
  margin-bottom: 1.3rem; }

/**
 * Consistent indentation for lists.
 */
dd, ol, ul {
  margin-left: 1rem; }

/**
 * Adjust focus color to match brand
 */
a,
input,
select,
textarea,
button,
[role='button'],
object {
  /* stylelint-disable-next-line selector-pseudo-class-no-unknown */ }
  a:focus,
  input:focus,
  select:focus,
  textarea:focus,
  button:focus,
  [role='button']:focus,
  object:focus {
    outline-color: #1D3A6A;
    outline-offset: 0.5rem; }
  a:focus:not(:focus-visible),
  input:focus:not(:focus-visible),
  select:focus:not(:focus-visible),
  textarea:focus:not(:focus-visible),
  button:focus:not(:focus-visible),
  [role='button']:focus:not(:focus-visible),
  object:focus:not(:focus-visible) {
    outline: none; }
  .js-focus-visible a:focus:not(.focus-visible), .js-focus-visible
  input:focus:not(.focus-visible), .js-focus-visible
  select:focus:not(.focus-visible), .js-focus-visible
  textarea:focus:not(.focus-visible), .js-focus-visible
  button:focus:not(.focus-visible), .js-focus-visible
  [role='button']:focus:not(.focus-visible), .js-focus-visible
  object:focus:not(.focus-visible) {
    outline: none; }

blockquote {
  border-left: 0.25rem solid;
  font-style: italic; }
  blockquote p {
    font-size: 1.25rem; }
    blockquote p:last-of-type {
      margin-bottom: 0; }

body {
  font-family: "Comfortaa", cursive;
  font-size: 17px;
  line-height: 30px;
  color: #272727;
  position: relative;
  margin: 0;
  padding: 0;
  padding-bottom: 0.1px; }

em {
  font-style: oblique; }

h1 em, h2 em, h3 em, h4 em, h5 em, h6 em {
  font-style: normal;
  font-size: 19px; }

.o-section h1 {
  margin-bottom: 10px; }

h1 {
  font-family: "Hind", sans-serif;
  color: #1D3A6A;
  font-size: 56px;
  line-height: 60px;
  margin-bottom: 15px; }
  @media (max-width: 767px) {
    h1 {
      font-size: 40px;
      line-height: 46px;
      margin-bottom: 15px; } }
  @media (min-width: 768px) and (max-width: 991px) {
    h1 {
      font-size: 44px;
      line-height: 50px;
      margin-bottom: 15px; } }

h2 {
  font-family: "Hind", sans-serif;
  color: #1D3A6A;
  font-size: 48px;
  line-height: 54px;
  margin-bottom: 15px; }
  @media (max-width: 767px) {
    h2 {
      font-size: 34px;
      line-height: 42px;
      margin-bottom: 7px; } }
  @media (min-width: 768px) and (max-width: 991px) {
    h2 {
      font-size: 40px;
      line-height: 46px;
      margin-bottom: 7px; } }

h3 {
  font-family: "Comfortaa", cursive;
  color: #1D3A6A;
  font-size: 36px;
  line-height: 44px;
  margin-bottom: 15px; }
  @media (max-width: 767px) {
    h3 {
      font-size: 30px;
      line-height: 40px; } }
  @media (min-width: 768px) and (max-width: 991px) {
    h3 {
      font-size: 34px;
      line-height: 43px; } }

h4 {
  font-family: "Comfortaa", cursive;
  color: #1D3A6A;
  font-size: 30px;
  line-height: 24px; }
  @media (max-width: 767px) {
    h4 {
      font-size: 26px;
      line-height: 38px; } }
  @media (min-width: 768px) and (max-width: 991px) {
    h4 {
      font-size: 26px;
      line-height: 38px; } }

h5 {
  font-family: "Comfortaa", cursive;
  color: #272727;
  margin-bottom: 6px;
  font-size: 22px;
  line-height: 32px; }
  @media (max-width: 767px) {
    h5 {
      font-size: 24px;
      line-height: 36px; } }
  @media (min-width: 768px) and (max-width: 991px) {
    h5 {
      font-size: 24px;
      line-height: 36px; } }

h6 {
  font-family: "Comfortaa", cursive;
  color: #1D3A6A;
  font-size: 20px;
  line-height: 18px; }

hr {
  height: 1px;
  border: 0;
  display: block;
  background-color: #D6D6D6; }

/**
 * Simple page-level setup.
 *
 * 1. Set the default `font-size` and `line-height` for the entire project.
 * 2. Ensure the page always fills at least the entire height of the viewport.
 */
html {
  min-height: 100%;
  overflow-y: visible;
  overflow-x: hidden;
  box-sizing: border-box; }

html.nav-active {
  overflow: hidden; }

img {
  width: 100%;
  max-width: 100%;
  height: auto;
  vertical-align: middle; }

a {
  font-family: "Comfortaa", cursive;
  color: inherit;
  text-decoration: none; }
  a:hover {
    text-decoration: none;
    color: #1D3A6A; }

ul {
  list-style: none;
  padding: 0;
  margin: 0; }
  ul li {
    margin-bottom: 10px;
    position: relative; }
    ul li > ul,
    ul li > ol {
      margin-bottom: 0;
      margin-left: 1rem;
      margin-top: 0.5rem; }

dt {
  font-weight: bold; }

dd {
  margin-bottom: 1rem;
  margin-left: 1rem; }

/**
 * 1. Ensure tables fill up as much space as possible.
 */
table {
  width: 100%;
  border-collapse: collapse; }

th,
td {
  border: 1px solid palatte(mono, black);
  padding: 0.5rem; }

/**
 * Remove default table spacing.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

/**
 * 1. Reset Chrome and Firefox behaviour which sets a `min-width: min-content;`
 *    on fieldsets.
 */
fieldset {
  min-width: 0;
  /* [1] */
  border: 0; }

.c-social-media {
  text-align: right; }
  .c-social-media li {
    display: inline; }
    .c-social-media li:last-child a {
      padding-right: 0; }
    .c-social-media li a {
      padding: 0 10px;
      font-size: 15px; }

.c-site-header {
  position: absolute;
  width: 100%;
  height: 60px; }
  .c-site-header .c-header__logo.c-header__logo--has-background {
    background-color: #fff;
    z-index: 9; }

.c-header__nav-list {
  display: flex;
  justify-content: flex-end; }
  .c-header__nav-list .menu-item {
    margin-bottom: 0; }
    .c-header__nav-list .menu-item a {
      padding: 8px 15px;
      text-transform: uppercase;
      font-size: 12px;
      display: block;
      line-height: 31px; }

.c-header__nav {
  display: flex;
  justify-content: flex-end; }

.c-header__nav-quick-links ul li:last-child a {
  padding-right: 0; }

.c-main-content {
  height: 100vh; }

.c-section {
  padding: 2.8rem; }

.c-article {
  min-height: 275px;
  position: relative; }
  .c-article.has-Background-img {
    background-position: center;
    background-size: cover;
    background-repeat: no-repeat; }
    .c-article.has-Background-img::before {
      content: '';
      position: absolute;
      height: 100%;
      background-color: rgba(0, 0, 0, 0.2);
      width: 100%;
      z-index: 1; }

.c-section-compact .c-article {
  min-height: 183.5px; }

.c-footer {
  z-index: 9;
  padding: 7px 0;
  font-size: 12px; }
  .c-footer.c-footer-fix {
    position: fixed;
    width: 100%;
    bottom: 0; }

.container-fluid {
  padding-right: 2.8rem;
  padding-left: 2.8rem; }

.no-padding-left {
  padding-left: 0; }

.no-padding-right {
  padding-right: 0; }

.c-slider .slick-dots {
  bottom: 0;
  width: auto;
  right: 0;
  margin: 10px; }
  .c-slider .slick-dots li {
    margin: 0; }
    .c-slider .slick-dots li button::before {
      font-size: 32px; }
    .c-slider .slick-dots li.slick-active button::before {
      color: #ffffff; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
